import openai
import urllib.parse
import re
import time

from scanner.models import ScanDetail, UserScanMap, ScannedURLDetail

# main function to perform attack
def main_function(url, payloads, check, type, scan_detail_id, scan_id):
    total_requests_count = 0
    scan_detail = ScanDetail.objects.get(id = scan_detail_id)
    opener = urllib.request.urlopen(url)
    output = {"payload":[], "code_snippet":[], "bug":[], "total_bugs":0}
    if opener.code == 999:
        time.sleep(3)
    for params in url.split("?")[1].split("&"):
        for payload in payloads:
            total_requests_count += 1
            bugs = url.replace(params, params + str(payload).strip())
            bugs = bugs.replace(" ","")
            request = urllib.request.urlopen(bugs)
            html = request.readlines()
            for line in html:
                checker = re.findall(check, line.decode('utf-8'))
                if len(checker) != 0:
                    output["total_bugs"] += 1
                    output["payload"].append(payload)
                    output["code_snippet"].append(line.strip().decode())
                    output["bug"].append(bugs)
                    scanned_url_detail = ScannedURLDetail(url_id = scan_detail, 
                                                          vuln_cat_id = type, 
                                                          payload = payload, 
                                                          code_snippet = line.strip().decode(), 
                                                          bug = bugs)
                    scanned_url_detail.save()
    user_scan_map = UserScanMap.objects.get(pk = scan_id)
    user_scan_map.total_requests += total_requests_count
    user_scan_map.save()
    if output["total_bugs"] == 0:
        return  1
    else:
        return output